###
# #%L
# socratic-platform
# %%
# Copyright (C) 2016 - 2018 Institute for Applied Systems Technology Bremen GmbH (ATB)
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# #L%
###
page.title=Guidelines
page.header=Guidelines
ideasToAction.header=From ideas to projects
ideasToAction.para1.text=The idea was selected! It is time to find how it can be realised in a useful way. SOCRATIC helps you to organize the work! Try and test. If you fail, learn from failures!
ideasToAction.para2.text=The third step in a social innovation process is to implement and test a prototype solution for the idea. SOCRATIC recommends an iterative and inclusive approach where prototypes are incrementally developed and tested in tight collaboration between developers and users. Learn from each iteration, and bring what you learn to the next iteration.
ideasToAction.point1.text=Who do you need to implement, test and promote the prototype solution? Create a project team. In addition to people who can design and develop, invite people who can test, create awareness, establish networks, and raise funds. Identify needed skills and search among the SOCRATIC community and otherwhere. Look for people with interests for the area you address. Look back at the contributors to your idea. Anyone who should be involved? Anyone who can help building a team? Use the stakeholder map defined during ideation, and contact relevant stakeholders.
ideasToAction.point2.text=How can you increase the usefulness of the prototype solution? Beneficiaries are more than testers. Involve them as co-creators in the design process. Then, make things concrete rapidly. It is difficult to get a prototype right on the first time. Develop first few features and test them. Refine the prototype based on the feedback, add a few new features, and test again!
ideasToAction.point3.text=How do you organize the work? Together with your team, define a project plan. Break down the work. Identify the core features/aspects of the prototype solution. Set up priorities and define the next iteration.What are the goals you wish to achieve next? What features should be developed and tested in the iteration? Define tasks in the iteration and assign responsibilities to the team members. 
ideasToAction.point4.text=How do you motivate the team members? Follow up progress and give constructive feedback. Encourage communication among team members. Let members exchange ideas and provide feedback.
ideasToAction.point5.text=How do you control the costs? An iterative approach allows you to better estimate the costs of the remaining work. Also usability tests or small pilots at each iteration help you uncover the prototype solution weaknesses early. Then you can fix weaknesses early too, and it costs much less than fixing a final solution.
SOCRATICProvides.header=The SOCRATIC platform provides:
SOCRATICProvides.point1.text=Support for setting up a project team. You can select people among the SOCRATIC community. You can bring new people in.
SOCRATICProvides.point2.text=Support for defining the project iterations.
SOCRATICProvides.point3.text=Support for discussing the goals and work progress.
SOCRATICProvides.point4.text=Support for describing lessons learnt from an iteration.
SOCRATICProvides.point5.text=Support for creating awareness about the project.
SOCRATICProvides.para1.text=After the prototype solution is developed and tested, it is time to bring the solution forward and creating impact.
SOCRATICRecommends.header=SOCRATIC recommends:
SOCRATICRecommends.point1.text=Select the most engaged beneficiaries as \u201Cchampions\u201D that will promote the solution and influence its adoption.
SOCRATICRecommends.point2.text=Each iteration addresses short term goals. Do forget the long term goals. Can you draw a timeline depicting the main milestones in the project? The timeline increases confidence in the project and motivate people to get engaged.
SOCRATICRecommends.point3.text=Think ahead. Who should be involved in the next steps? It takes time to mobilize people.
SOCRATICRecommends.point4.text=Before testing a prototype solution, identify the questions you wish to get answer for. They should relate to the foreseen values of the solution. When promoting the solution, you will need evidence of the values of your solution. You may also discover other benefits underway. Document them well and refine the foreseen values of the solution.
SOCRATICRecommends.point5.text=Refine the business elements earlier described during idea generation. Use the knowledge you learn from each iteration. Use the feedback you get when promoting the solution and establishing networks.
toolsMethods.header=Tools and methods
toolsMethods.projectManagement.header=Project management
toolsMethods.projectManagement.para1.text=SOCRATIC provides support for planning the overall iterations of a project, setting up teams and creating awareness. SOCRATIC does not support detailed planning and follow-up. There exists a bunch of tools for that purpose.  Search for project management tools on internet, for instance look at
designChoicesExchangingFeedback.header=Discussing the design choices, exchanging feedback.
designChoicesExchangingFeedback.para1.text=SOCRATIC provides support for discussing the work through comments. In addition, you can make use of collaborative documentation tools such as Google Docs and PiratePad. You can also use platforms for virtual meetings and webinars, such as Google Hangouts, Skype and Appear.in.
developingMockups.header=Developing mockups
developingMockups.para1.text=A mockup is a prototype that demonstrates part of the functionality of a system and enables testing the design. Different tools are available for different fields.
developingMockups.para2.text=In the case of software applications, mockups are a way of designing the user interfaces. Mockups can be drawn on paper or using computer images, but there also exist tools that support designing the user interaction with the application. Search for evaluation of tools on internet, for instance look at
testingValidatingPrototype.header=Testing: validating a prototype
testingValidatingPrototype.para1.text=Different types of tests can be conducted. One may wish to test that a prototype works correctly, that it is easy to use or that is useful. Testing correctness is called validation, while testing usability and usefulness is called assessment. Validation should be performed  first and errors corrected before assessment is done.
testingValidatingPrototype.para2.text=Test cases are often used for validation.
testingValidatingPrototype.point1.text=They describe a script, the set of actions the users should performed and the expected outcome.
testingValidatingPrototype.point2.text=A divergence from the outcome is considered as an error and should be recorded.
testingValidatingPrototype.point3.text=The testers do not need to be potential users of the solution.
testingAssessingPrototype.header=Testing: assessing a prototype
testingAssessingPrototype.para1.text=The methods should be chosen depending on the purpose of the testing. Formative testing and summative testing are two approaches for assessment:
testingAssessingPrototype.point1.text=The purpose of formative testing is to evaluate and adjust the solution along the development process. Formative testing is repeated, until the product is close to perfect.
testingAssessingPrototype.point2.text=Summative testing is normally used to evaluate a finalized product. It allows to get evidence about the benefits of the product and to compare it to other products.
testingAssessingPrototype.para2.text=Usability testing is performed early in the development and thus belongs to formative testing. 
testingAssessingPrototype.para3.text=Examples of methods that can be used for formative testing:
testingAssessingPrototype.point3.text=Usability testing: Thinking aloud while performing free exploration and tasks (use cases). Observations
testingAssessingPrototype.point4.text=Acceptance testing: Interviews 
testingAssessingPrototype.para4.text=Examples of methods that can be used for summative testing:
testingAssessingPrototype.point5.text=Interviews after free exploration
testingAssessingPrototype.point6.text=Questionnaires
freeExploring.header=Free exploring
freeExploring.text=is about letting using the users explore the prototype freely in order to understand which paths users take, what they are interested in, and what they overlook. 
tasksUseCases.header=Tasks or use cases
tasksUseCases.text=is about asking the users to perform some actions using the prototype in order to assess the support provided by the prototype for that task.
thinkAloud.header=Think aloud
thinkAloud.text=is a testing-method, where participants are asked to verbalize their thoughts, while using a certain application.
observation.header=Observation
observation.text=allows to collect the expressions and reactions of the users in action.
testingAssessingPrototype.para5.text=Both <b>interviews</b> and <b>questionnaires</b> were introduced under defining a challenge. Interviews can be applied to ask deepening questions about what the users like or did not like, about what they miss and what they suggest.
